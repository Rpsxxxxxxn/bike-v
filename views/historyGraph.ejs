<div class="mx-auto pt-3" style="max-width: 700px">
  <div class="mb-3">
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
      <select class="form-select form-select" aria-label="メーカー">
        <option selected>メーカー</option>
        <option value="1">その1</option>
        <option value="2">その2</option>
        <option value="3">その3</option>
      </select>
      <select class="form-select form-select" aria-label="モデル">
        <option selected>モデル</option>
        <option value="1">その1</option>
        <option value="2">その2</option>
        <option value="3">その3</option>
      </select>
      <select class="form-select form-select" aria-label="メンテナンス内容">
        <option selected>メンテナンス内容</option>
        <option value="1">その1</option>
        <option value="2">その2</option>
        <option value="3">その3</option>
      </select>
    </div>
  </div>
  <hr>
  <canvas id="myChartOdo"></canvas>
  <hr>
  <table class="table table-striped-columns table-bordered ">
    <thead>
      <tr>
        <td><b>走行距離</b></td>
        <td><b>メンテナンス費用</b></td>
        <td><b>登録日付</b></td>
        <!-- <td><b>操作</b></td> -->
      </tr>
    </thead>
    <tbody>
      <% dataList.forEach((data, index) => { %>
        <tr>
          <td><%= String(data.odo).replace( /(\d)(?=(\d\d\d)+(?!\d))/g, '$1,') %></td>
          <td><%= String(data.price).replace( /(\d)(?=(\d\d\d)+(?!\d))/g, '$1,') %></td>
          <td><%= data.date %></td>
          <!-- <td>
            <form action="/history/delete/<%= data.id %>" method="POST">
              <input
                type="submit"
                class="btn btn-danger"
                value="削除"
                onclick="return confirm('削除しますか？')"
            ></form>
          </td> -->
        </tr>
        <% }) %>
      </tbody>
    </table>
</div>

<script>

  function getApi(url) {
    return new Promise((resolve, reject) => {
      fetch(url)
        .then((res) => res.json())
        .then((data) => {
          resolve(data);
        });
    });
  }

  fetch('/api/graph')
        .then((res) => res.json())
        .then((data) => {
          ConvertChartByData(data);
        });

  function ConvertChartByData(dataList) {
    let labels = [];
    let odoData = [];
    let priceData = [];
    dataList.forEach((data) => {
      labels.push(data.date);
      odoData.push(data.odo);
      priceData.push(data.price);
    });
    const ctx = document.getElementById("myChartOdo");
    const myLineChart = new Chart(ctx, {
      data: {
        labels: labels,
        datasets: [
          {
            type: 'line',
            label: '走行距離',
            data: odoData,
            borderColor: "rgba(32, 99, 232, 0.8)",
            backgroundColor: "rgba(32, 99, 232, 0.2)",
            fill: true,
            tension: 0
          },
          {
            type: 'bar',
            label: 'メンテナンス費用',
            data: priceData,
            borderColor: "rgba(255, 99, 132, 0.8)",
            backgroundColor: "rgba(255, 99, 132, 0.2)",
            fill: true,
            tension: 0.1,
          },
        ]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    })
  }
</script>